# Ruby-Box2D : Yet another Box2D wrapper for Ruby
#
# * https://github.com/vaiorabbit/box2d-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'

module Box2D
  extend FFI::Library
  # Define/Macro


  # Enum


  # Typedef


  # Struct


  # Function

  def self.setup_main_symbols(output_error = false)
    symbols = [
      :b2CreateWorld,
      :b2DestroyWorld,
      :b2World_IsValid,
      :b2World_Step,
      :b2World_Draw,
      :b2World_GetBodyEvents,
      :b2World_GetSensorEvents,
      :b2World_GetContactEvents,
      :b2World_OverlapAABB,
      :b2World_OverlapCircle,
      :b2World_OverlapCapsule,
      :b2World_OverlapPolygon,
      :b2World_CastRay,
      :b2World_CastRayClosest,
      :b2World_CastCircle,
      :b2World_CastCapsule,
      :b2World_CastPolygon,
      :b2World_EnableSleeping,
      :b2World_IsSleepingEnabled,
      :b2World_EnableContinuous,
      :b2World_IsContinuousEnabled,
      :b2World_SetRestitutionThreshold,
      :b2World_GetRestitutionThreshold,
      :b2World_SetHitEventThreshold,
      :b2World_GetHitEventThreshold,
      :b2World_SetCustomFilterCallback,
      :b2World_SetPreSolveCallback,
      :b2World_SetGravity,
      :b2World_GetGravity,
      :b2World_Explode,
      :b2World_SetContactTuning,
      :b2World_SetJointTuning,
      :b2World_SetMaximumLinearVelocity,
      :b2World_GetMaximumLinearVelocity,
      :b2World_EnableWarmStarting,
      :b2World_IsWarmStartingEnabled,
      :b2World_GetProfile,
      :b2World_GetCounters,
      :b2World_DumpMemoryStats,
      :b2CreateBody,
      :b2DestroyBody,
      :b2Body_IsValid,
      :b2Body_GetType,
      :b2Body_SetType,
      :b2Body_SetUserData,
      :b2Body_GetUserData,
      :b2Body_GetPosition,
      :b2Body_GetRotation,
      :b2Body_GetTransform,
      :b2Body_SetTransform,
      :b2Body_GetLocalPoint,
      :b2Body_GetWorldPoint,
      :b2Body_GetLocalVector,
      :b2Body_GetWorldVector,
      :b2Body_GetLinearVelocity,
      :b2Body_GetAngularVelocity,
      :b2Body_SetLinearVelocity,
      :b2Body_SetAngularVelocity,
      :b2Body_ApplyForce,
      :b2Body_ApplyForceToCenter,
      :b2Body_ApplyTorque,
      :b2Body_ApplyLinearImpulse,
      :b2Body_ApplyLinearImpulseToCenter,
      :b2Body_ApplyAngularImpulse,
      :b2Body_GetMass,
      :b2Body_GetRotationalInertia,
      :b2Body_GetLocalCenterOfMass,
      :b2Body_GetWorldCenterOfMass,
      :b2Body_SetMassData,
      :b2Body_GetMassData,
      :b2Body_ApplyMassFromShapes,
      :b2Body_SetAutomaticMass,
      :b2Body_GetAutomaticMass,
      :b2Body_SetLinearDamping,
      :b2Body_GetLinearDamping,
      :b2Body_SetAngularDamping,
      :b2Body_GetAngularDamping,
      :b2Body_SetGravityScale,
      :b2Body_GetGravityScale,
      :b2Body_IsAwake,
      :b2Body_SetAwake,
      :b2Body_EnableSleep,
      :b2Body_IsSleepEnabled,
      :b2Body_SetSleepThreshold,
      :b2Body_GetSleepThreshold,
      :b2Body_IsEnabled,
      :b2Body_Disable,
      :b2Body_Enable,
      :b2Body_SetFixedRotation,
      :b2Body_IsFixedRotation,
      :b2Body_SetBullet,
      :b2Body_IsBullet,
      :b2Body_EnableHitEvents,
      :b2Body_GetWorld,
      :b2Body_GetShapeCount,
      :b2Body_GetShapes,
      :b2Body_GetJointCount,
      :b2Body_GetJoints,
      :b2Body_GetContactCapacity,
      :b2Body_GetContactData,
      :b2Body_ComputeAABB,
      :b2CreateCircleShape,
      :b2CreateSegmentShape,
      :b2CreateCapsuleShape,
      :b2CreatePolygonShape,
      :b2DestroyShape,
      :b2Shape_IsValid,
      :b2Shape_GetType,
      :b2Shape_GetBody,
      :b2Shape_GetWorld,
      :b2Shape_IsSensor,
      :b2Shape_SetUserData,
      :b2Shape_GetUserData,
      :b2Shape_SetDensity,
      :b2Shape_GetDensity,
      :b2Shape_SetFriction,
      :b2Shape_GetFriction,
      :b2Shape_SetRestitution,
      :b2Shape_GetRestitution,
      :b2Shape_GetFilter,
      :b2Shape_SetFilter,
      :b2Shape_EnableSensorEvents,
      :b2Shape_AreSensorEventsEnabled,
      :b2Shape_EnableContactEvents,
      :b2Shape_AreContactEventsEnabled,
      :b2Shape_EnablePreSolveEvents,
      :b2Shape_ArePreSolveEventsEnabled,
      :b2Shape_EnableHitEvents,
      :b2Shape_AreHitEventsEnabled,
      :b2Shape_TestPoint,
      :b2Shape_RayCast,
      :b2Shape_GetCircle,
      :b2Shape_GetSegment,
      :b2Shape_GetChainSegment,
      :b2Shape_GetCapsule,
      :b2Shape_GetPolygon,
      :b2Shape_SetCircle,
      :b2Shape_SetCapsule,
      :b2Shape_SetSegment,
      :b2Shape_SetPolygon,
      :b2Shape_GetParentChain,
      :b2Shape_GetContactCapacity,
      :b2Shape_GetContactData,
      :b2Shape_GetAABB,
      :b2Shape_GetClosestPoint,
      :b2CreateChain,
      :b2DestroyChain,
      :b2Chain_GetWorld,
      :b2Chain_GetSegmentCount,
      :b2Chain_GetSegments,
      :b2Chain_SetFriction,
      :b2Chain_SetRestitution,
      :b2Chain_IsValid,
      :b2DestroyJoint,
      :b2Joint_IsValid,
      :b2Joint_GetType,
      :b2Joint_GetBodyA,
      :b2Joint_GetBodyB,
      :b2Joint_GetWorld,
      :b2Joint_GetLocalAnchorA,
      :b2Joint_GetLocalAnchorB,
      :b2Joint_SetCollideConnected,
      :b2Joint_GetCollideConnected,
      :b2Joint_SetUserData,
      :b2Joint_GetUserData,
      :b2Joint_WakeBodies,
      :b2Joint_GetConstraintForce,
      :b2Joint_GetConstraintTorque,
      :b2CreateDistanceJoint,
      :b2DistanceJoint_SetLength,
      :b2DistanceJoint_GetLength,
      :b2DistanceJoint_EnableSpring,
      :b2DistanceJoint_IsSpringEnabled,
      :b2DistanceJoint_SetSpringHertz,
      :b2DistanceJoint_SetSpringDampingRatio,
      :b2DistanceJoint_GetSpringHertz,
      :b2DistanceJoint_GetSpringDampingRatio,
      :b2DistanceJoint_EnableLimit,
      :b2DistanceJoint_IsLimitEnabled,
      :b2DistanceJoint_SetLengthRange,
      :b2DistanceJoint_GetMinLength,
      :b2DistanceJoint_GetMaxLength,
      :b2DistanceJoint_GetCurrentLength,
      :b2DistanceJoint_EnableMotor,
      :b2DistanceJoint_IsMotorEnabled,
      :b2DistanceJoint_SetMotorSpeed,
      :b2DistanceJoint_GetMotorSpeed,
      :b2DistanceJoint_SetMaxMotorForce,
      :b2DistanceJoint_GetMaxMotorForce,
      :b2DistanceJoint_GetMotorForce,
      :b2CreateMotorJoint,
      :b2MotorJoint_SetLinearOffset,
      :b2MotorJoint_GetLinearOffset,
      :b2MotorJoint_SetAngularOffset,
      :b2MotorJoint_GetAngularOffset,
      :b2MotorJoint_SetMaxForce,
      :b2MotorJoint_GetMaxForce,
      :b2MotorJoint_SetMaxTorque,
      :b2MotorJoint_GetMaxTorque,
      :b2MotorJoint_SetCorrectionFactor,
      :b2MotorJoint_GetCorrectionFactor,
      :b2CreateMouseJoint,
      :b2MouseJoint_SetTarget,
      :b2MouseJoint_GetTarget,
      :b2MouseJoint_SetSpringHertz,
      :b2MouseJoint_GetSpringHertz,
      :b2MouseJoint_SetSpringDampingRatio,
      :b2MouseJoint_GetSpringDampingRatio,
      :b2MouseJoint_SetMaxForce,
      :b2MouseJoint_GetMaxForce,
      :b2CreatePrismaticJoint,
      :b2PrismaticJoint_EnableSpring,
      :b2PrismaticJoint_IsSpringEnabled,
      :b2PrismaticJoint_SetSpringHertz,
      :b2PrismaticJoint_GetSpringHertz,
      :b2PrismaticJoint_SetSpringDampingRatio,
      :b2PrismaticJoint_GetSpringDampingRatio,
      :b2PrismaticJoint_EnableLimit,
      :b2PrismaticJoint_IsLimitEnabled,
      :b2PrismaticJoint_GetLowerLimit,
      :b2PrismaticJoint_GetUpperLimit,
      :b2PrismaticJoint_SetLimits,
      :b2PrismaticJoint_EnableMotor,
      :b2PrismaticJoint_IsMotorEnabled,
      :b2PrismaticJoint_SetMotorSpeed,
      :b2PrismaticJoint_GetMotorSpeed,
      :b2PrismaticJoint_SetMaxMotorForce,
      :b2PrismaticJoint_GetMaxMotorForce,
      :b2PrismaticJoint_GetMotorForce,
      :b2CreateRevoluteJoint,
      :b2RevoluteJoint_EnableSpring,
      :b2RevoluteJoint_IsSpringEnabled,
      :b2RevoluteJoint_SetSpringHertz,
      :b2RevoluteJoint_GetSpringHertz,
      :b2RevoluteJoint_SetSpringDampingRatio,
      :b2RevoluteJoint_GetSpringDampingRatio,
      :b2RevoluteJoint_GetAngle,
      :b2RevoluteJoint_EnableLimit,
      :b2RevoluteJoint_IsLimitEnabled,
      :b2RevoluteJoint_GetLowerLimit,
      :b2RevoluteJoint_GetUpperLimit,
      :b2RevoluteJoint_SetLimits,
      :b2RevoluteJoint_EnableMotor,
      :b2RevoluteJoint_IsMotorEnabled,
      :b2RevoluteJoint_SetMotorSpeed,
      :b2RevoluteJoint_GetMotorSpeed,
      :b2RevoluteJoint_GetMotorTorque,
      :b2RevoluteJoint_SetMaxMotorTorque,
      :b2RevoluteJoint_GetMaxMotorTorque,
      :b2CreateWeldJoint,
      :b2WeldJoint_GetReferenceAngle,
      :b2WeldJoint_SetReferenceAngle,
      :b2WeldJoint_SetLinearHertz,
      :b2WeldJoint_GetLinearHertz,
      :b2WeldJoint_SetLinearDampingRatio,
      :b2WeldJoint_GetLinearDampingRatio,
      :b2WeldJoint_SetAngularHertz,
      :b2WeldJoint_GetAngularHertz,
      :b2WeldJoint_SetAngularDampingRatio,
      :b2WeldJoint_GetAngularDampingRatio,
      :b2CreateWheelJoint,
      :b2WheelJoint_EnableSpring,
      :b2WheelJoint_IsSpringEnabled,
      :b2WheelJoint_SetSpringHertz,
      :b2WheelJoint_GetSpringHertz,
      :b2WheelJoint_SetSpringDampingRatio,
      :b2WheelJoint_GetSpringDampingRatio,
      :b2WheelJoint_EnableLimit,
      :b2WheelJoint_IsLimitEnabled,
      :b2WheelJoint_GetLowerLimit,
      :b2WheelJoint_GetUpperLimit,
      :b2WheelJoint_SetLimits,
      :b2WheelJoint_EnableMotor,
      :b2WheelJoint_IsMotorEnabled,
      :b2WheelJoint_SetMotorSpeed,
      :b2WheelJoint_GetMotorSpeed,
      :b2WheelJoint_SetMaxMotorTorque,
      :b2WheelJoint_GetMaxMotorTorque,
      :b2WheelJoint_GetMotorTorque,
    ]
    apis = {
      :b2CreateWorld => :CreateWorld,
      :b2DestroyWorld => :DestroyWorld,
      :b2World_IsValid => :World_IsValid,
      :b2World_Step => :World_Step,
      :b2World_Draw => :World_Draw,
      :b2World_GetBodyEvents => :World_GetBodyEvents,
      :b2World_GetSensorEvents => :World_GetSensorEvents,
      :b2World_GetContactEvents => :World_GetContactEvents,
      :b2World_OverlapAABB => :World_OverlapAABB,
      :b2World_OverlapCircle => :World_OverlapCircle,
      :b2World_OverlapCapsule => :World_OverlapCapsule,
      :b2World_OverlapPolygon => :World_OverlapPolygon,
      :b2World_CastRay => :World_CastRay,
      :b2World_CastRayClosest => :World_CastRayClosest,
      :b2World_CastCircle => :World_CastCircle,
      :b2World_CastCapsule => :World_CastCapsule,
      :b2World_CastPolygon => :World_CastPolygon,
      :b2World_EnableSleeping => :World_EnableSleeping,
      :b2World_IsSleepingEnabled => :World_IsSleepingEnabled,
      :b2World_EnableContinuous => :World_EnableContinuous,
      :b2World_IsContinuousEnabled => :World_IsContinuousEnabled,
      :b2World_SetRestitutionThreshold => :World_SetRestitutionThreshold,
      :b2World_GetRestitutionThreshold => :World_GetRestitutionThreshold,
      :b2World_SetHitEventThreshold => :World_SetHitEventThreshold,
      :b2World_GetHitEventThreshold => :World_GetHitEventThreshold,
      :b2World_SetCustomFilterCallback => :World_SetCustomFilterCallback,
      :b2World_SetPreSolveCallback => :World_SetPreSolveCallback,
      :b2World_SetGravity => :World_SetGravity,
      :b2World_GetGravity => :World_GetGravity,
      :b2World_Explode => :World_Explode,
      :b2World_SetContactTuning => :World_SetContactTuning,
      :b2World_SetJointTuning => :World_SetJointTuning,
      :b2World_SetMaximumLinearVelocity => :World_SetMaximumLinearVelocity,
      :b2World_GetMaximumLinearVelocity => :World_GetMaximumLinearVelocity,
      :b2World_EnableWarmStarting => :World_EnableWarmStarting,
      :b2World_IsWarmStartingEnabled => :World_IsWarmStartingEnabled,
      :b2World_GetProfile => :World_GetProfile,
      :b2World_GetCounters => :World_GetCounters,
      :b2World_DumpMemoryStats => :World_DumpMemoryStats,
      :b2CreateBody => :CreateBody,
      :b2DestroyBody => :DestroyBody,
      :b2Body_IsValid => :Body_IsValid,
      :b2Body_GetType => :Body_GetType,
      :b2Body_SetType => :Body_SetType,
      :b2Body_SetUserData => :Body_SetUserData,
      :b2Body_GetUserData => :Body_GetUserData,
      :b2Body_GetPosition => :Body_GetPosition,
      :b2Body_GetRotation => :Body_GetRotation,
      :b2Body_GetTransform => :Body_GetTransform,
      :b2Body_SetTransform => :Body_SetTransform,
      :b2Body_GetLocalPoint => :Body_GetLocalPoint,
      :b2Body_GetWorldPoint => :Body_GetWorldPoint,
      :b2Body_GetLocalVector => :Body_GetLocalVector,
      :b2Body_GetWorldVector => :Body_GetWorldVector,
      :b2Body_GetLinearVelocity => :Body_GetLinearVelocity,
      :b2Body_GetAngularVelocity => :Body_GetAngularVelocity,
      :b2Body_SetLinearVelocity => :Body_SetLinearVelocity,
      :b2Body_SetAngularVelocity => :Body_SetAngularVelocity,
      :b2Body_ApplyForce => :Body_ApplyForce,
      :b2Body_ApplyForceToCenter => :Body_ApplyForceToCenter,
      :b2Body_ApplyTorque => :Body_ApplyTorque,
      :b2Body_ApplyLinearImpulse => :Body_ApplyLinearImpulse,
      :b2Body_ApplyLinearImpulseToCenter => :Body_ApplyLinearImpulseToCenter,
      :b2Body_ApplyAngularImpulse => :Body_ApplyAngularImpulse,
      :b2Body_GetMass => :Body_GetMass,
      :b2Body_GetRotationalInertia => :Body_GetRotationalInertia,
      :b2Body_GetLocalCenterOfMass => :Body_GetLocalCenterOfMass,
      :b2Body_GetWorldCenterOfMass => :Body_GetWorldCenterOfMass,
      :b2Body_SetMassData => :Body_SetMassData,
      :b2Body_GetMassData => :Body_GetMassData,
      :b2Body_ApplyMassFromShapes => :Body_ApplyMassFromShapes,
      :b2Body_SetAutomaticMass => :Body_SetAutomaticMass,
      :b2Body_GetAutomaticMass => :Body_GetAutomaticMass,
      :b2Body_SetLinearDamping => :Body_SetLinearDamping,
      :b2Body_GetLinearDamping => :Body_GetLinearDamping,
      :b2Body_SetAngularDamping => :Body_SetAngularDamping,
      :b2Body_GetAngularDamping => :Body_GetAngularDamping,
      :b2Body_SetGravityScale => :Body_SetGravityScale,
      :b2Body_GetGravityScale => :Body_GetGravityScale,
      :b2Body_IsAwake => :Body_IsAwake,
      :b2Body_SetAwake => :Body_SetAwake,
      :b2Body_EnableSleep => :Body_EnableSleep,
      :b2Body_IsSleepEnabled => :Body_IsSleepEnabled,
      :b2Body_SetSleepThreshold => :Body_SetSleepThreshold,
      :b2Body_GetSleepThreshold => :Body_GetSleepThreshold,
      :b2Body_IsEnabled => :Body_IsEnabled,
      :b2Body_Disable => :Body_Disable,
      :b2Body_Enable => :Body_Enable,
      :b2Body_SetFixedRotation => :Body_SetFixedRotation,
      :b2Body_IsFixedRotation => :Body_IsFixedRotation,
      :b2Body_SetBullet => :Body_SetBullet,
      :b2Body_IsBullet => :Body_IsBullet,
      :b2Body_EnableHitEvents => :Body_EnableHitEvents,
      :b2Body_GetWorld => :Body_GetWorld,
      :b2Body_GetShapeCount => :Body_GetShapeCount,
      :b2Body_GetShapes => :Body_GetShapes,
      :b2Body_GetJointCount => :Body_GetJointCount,
      :b2Body_GetJoints => :Body_GetJoints,
      :b2Body_GetContactCapacity => :Body_GetContactCapacity,
      :b2Body_GetContactData => :Body_GetContactData,
      :b2Body_ComputeAABB => :Body_ComputeAABB,
      :b2CreateCircleShape => :CreateCircleShape,
      :b2CreateSegmentShape => :CreateSegmentShape,
      :b2CreateCapsuleShape => :CreateCapsuleShape,
      :b2CreatePolygonShape => :CreatePolygonShape,
      :b2DestroyShape => :DestroyShape,
      :b2Shape_IsValid => :Shape_IsValid,
      :b2Shape_GetType => :Shape_GetType,
      :b2Shape_GetBody => :Shape_GetBody,
      :b2Shape_GetWorld => :Shape_GetWorld,
      :b2Shape_IsSensor => :Shape_IsSensor,
      :b2Shape_SetUserData => :Shape_SetUserData,
      :b2Shape_GetUserData => :Shape_GetUserData,
      :b2Shape_SetDensity => :Shape_SetDensity,
      :b2Shape_GetDensity => :Shape_GetDensity,
      :b2Shape_SetFriction => :Shape_SetFriction,
      :b2Shape_GetFriction => :Shape_GetFriction,
      :b2Shape_SetRestitution => :Shape_SetRestitution,
      :b2Shape_GetRestitution => :Shape_GetRestitution,
      :b2Shape_GetFilter => :Shape_GetFilter,
      :b2Shape_SetFilter => :Shape_SetFilter,
      :b2Shape_EnableSensorEvents => :Shape_EnableSensorEvents,
      :b2Shape_AreSensorEventsEnabled => :Shape_AreSensorEventsEnabled,
      :b2Shape_EnableContactEvents => :Shape_EnableContactEvents,
      :b2Shape_AreContactEventsEnabled => :Shape_AreContactEventsEnabled,
      :b2Shape_EnablePreSolveEvents => :Shape_EnablePreSolveEvents,
      :b2Shape_ArePreSolveEventsEnabled => :Shape_ArePreSolveEventsEnabled,
      :b2Shape_EnableHitEvents => :Shape_EnableHitEvents,
      :b2Shape_AreHitEventsEnabled => :Shape_AreHitEventsEnabled,
      :b2Shape_TestPoint => :Shape_TestPoint,
      :b2Shape_RayCast => :Shape_RayCast,
      :b2Shape_GetCircle => :Shape_GetCircle,
      :b2Shape_GetSegment => :Shape_GetSegment,
      :b2Shape_GetChainSegment => :Shape_GetChainSegment,
      :b2Shape_GetCapsule => :Shape_GetCapsule,
      :b2Shape_GetPolygon => :Shape_GetPolygon,
      :b2Shape_SetCircle => :Shape_SetCircle,
      :b2Shape_SetCapsule => :Shape_SetCapsule,
      :b2Shape_SetSegment => :Shape_SetSegment,
      :b2Shape_SetPolygon => :Shape_SetPolygon,
      :b2Shape_GetParentChain => :Shape_GetParentChain,
      :b2Shape_GetContactCapacity => :Shape_GetContactCapacity,
      :b2Shape_GetContactData => :Shape_GetContactData,
      :b2Shape_GetAABB => :Shape_GetAABB,
      :b2Shape_GetClosestPoint => :Shape_GetClosestPoint,
      :b2CreateChain => :CreateChain,
      :b2DestroyChain => :DestroyChain,
      :b2Chain_GetWorld => :Chain_GetWorld,
      :b2Chain_GetSegmentCount => :Chain_GetSegmentCount,
      :b2Chain_GetSegments => :Chain_GetSegments,
      :b2Chain_SetFriction => :Chain_SetFriction,
      :b2Chain_SetRestitution => :Chain_SetRestitution,
      :b2Chain_IsValid => :Chain_IsValid,
      :b2DestroyJoint => :DestroyJoint,
      :b2Joint_IsValid => :Joint_IsValid,
      :b2Joint_GetType => :Joint_GetType,
      :b2Joint_GetBodyA => :Joint_GetBodyA,
      :b2Joint_GetBodyB => :Joint_GetBodyB,
      :b2Joint_GetWorld => :Joint_GetWorld,
      :b2Joint_GetLocalAnchorA => :Joint_GetLocalAnchorA,
      :b2Joint_GetLocalAnchorB => :Joint_GetLocalAnchorB,
      :b2Joint_SetCollideConnected => :Joint_SetCollideConnected,
      :b2Joint_GetCollideConnected => :Joint_GetCollideConnected,
      :b2Joint_SetUserData => :Joint_SetUserData,
      :b2Joint_GetUserData => :Joint_GetUserData,
      :b2Joint_WakeBodies => :Joint_WakeBodies,
      :b2Joint_GetConstraintForce => :Joint_GetConstraintForce,
      :b2Joint_GetConstraintTorque => :Joint_GetConstraintTorque,
      :b2CreateDistanceJoint => :CreateDistanceJoint,
      :b2DistanceJoint_SetLength => :DistanceJoint_SetLength,
      :b2DistanceJoint_GetLength => :DistanceJoint_GetLength,
      :b2DistanceJoint_EnableSpring => :DistanceJoint_EnableSpring,
      :b2DistanceJoint_IsSpringEnabled => :DistanceJoint_IsSpringEnabled,
      :b2DistanceJoint_SetSpringHertz => :DistanceJoint_SetSpringHertz,
      :b2DistanceJoint_SetSpringDampingRatio => :DistanceJoint_SetSpringDampingRatio,
      :b2DistanceJoint_GetSpringHertz => :DistanceJoint_GetSpringHertz,
      :b2DistanceJoint_GetSpringDampingRatio => :DistanceJoint_GetSpringDampingRatio,
      :b2DistanceJoint_EnableLimit => :DistanceJoint_EnableLimit,
      :b2DistanceJoint_IsLimitEnabled => :DistanceJoint_IsLimitEnabled,
      :b2DistanceJoint_SetLengthRange => :DistanceJoint_SetLengthRange,
      :b2DistanceJoint_GetMinLength => :DistanceJoint_GetMinLength,
      :b2DistanceJoint_GetMaxLength => :DistanceJoint_GetMaxLength,
      :b2DistanceJoint_GetCurrentLength => :DistanceJoint_GetCurrentLength,
      :b2DistanceJoint_EnableMotor => :DistanceJoint_EnableMotor,
      :b2DistanceJoint_IsMotorEnabled => :DistanceJoint_IsMotorEnabled,
      :b2DistanceJoint_SetMotorSpeed => :DistanceJoint_SetMotorSpeed,
      :b2DistanceJoint_GetMotorSpeed => :DistanceJoint_GetMotorSpeed,
      :b2DistanceJoint_SetMaxMotorForce => :DistanceJoint_SetMaxMotorForce,
      :b2DistanceJoint_GetMaxMotorForce => :DistanceJoint_GetMaxMotorForce,
      :b2DistanceJoint_GetMotorForce => :DistanceJoint_GetMotorForce,
      :b2CreateMotorJoint => :CreateMotorJoint,
      :b2MotorJoint_SetLinearOffset => :MotorJoint_SetLinearOffset,
      :b2MotorJoint_GetLinearOffset => :MotorJoint_GetLinearOffset,
      :b2MotorJoint_SetAngularOffset => :MotorJoint_SetAngularOffset,
      :b2MotorJoint_GetAngularOffset => :MotorJoint_GetAngularOffset,
      :b2MotorJoint_SetMaxForce => :MotorJoint_SetMaxForce,
      :b2MotorJoint_GetMaxForce => :MotorJoint_GetMaxForce,
      :b2MotorJoint_SetMaxTorque => :MotorJoint_SetMaxTorque,
      :b2MotorJoint_GetMaxTorque => :MotorJoint_GetMaxTorque,
      :b2MotorJoint_SetCorrectionFactor => :MotorJoint_SetCorrectionFactor,
      :b2MotorJoint_GetCorrectionFactor => :MotorJoint_GetCorrectionFactor,
      :b2CreateMouseJoint => :CreateMouseJoint,
      :b2MouseJoint_SetTarget => :MouseJoint_SetTarget,
      :b2MouseJoint_GetTarget => :MouseJoint_GetTarget,
      :b2MouseJoint_SetSpringHertz => :MouseJoint_SetSpringHertz,
      :b2MouseJoint_GetSpringHertz => :MouseJoint_GetSpringHertz,
      :b2MouseJoint_SetSpringDampingRatio => :MouseJoint_SetSpringDampingRatio,
      :b2MouseJoint_GetSpringDampingRatio => :MouseJoint_GetSpringDampingRatio,
      :b2MouseJoint_SetMaxForce => :MouseJoint_SetMaxForce,
      :b2MouseJoint_GetMaxForce => :MouseJoint_GetMaxForce,
      :b2CreatePrismaticJoint => :CreatePrismaticJoint,
      :b2PrismaticJoint_EnableSpring => :PrismaticJoint_EnableSpring,
      :b2PrismaticJoint_IsSpringEnabled => :PrismaticJoint_IsSpringEnabled,
      :b2PrismaticJoint_SetSpringHertz => :PrismaticJoint_SetSpringHertz,
      :b2PrismaticJoint_GetSpringHertz => :PrismaticJoint_GetSpringHertz,
      :b2PrismaticJoint_SetSpringDampingRatio => :PrismaticJoint_SetSpringDampingRatio,
      :b2PrismaticJoint_GetSpringDampingRatio => :PrismaticJoint_GetSpringDampingRatio,
      :b2PrismaticJoint_EnableLimit => :PrismaticJoint_EnableLimit,
      :b2PrismaticJoint_IsLimitEnabled => :PrismaticJoint_IsLimitEnabled,
      :b2PrismaticJoint_GetLowerLimit => :PrismaticJoint_GetLowerLimit,
      :b2PrismaticJoint_GetUpperLimit => :PrismaticJoint_GetUpperLimit,
      :b2PrismaticJoint_SetLimits => :PrismaticJoint_SetLimits,
      :b2PrismaticJoint_EnableMotor => :PrismaticJoint_EnableMotor,
      :b2PrismaticJoint_IsMotorEnabled => :PrismaticJoint_IsMotorEnabled,
      :b2PrismaticJoint_SetMotorSpeed => :PrismaticJoint_SetMotorSpeed,
      :b2PrismaticJoint_GetMotorSpeed => :PrismaticJoint_GetMotorSpeed,
      :b2PrismaticJoint_SetMaxMotorForce => :PrismaticJoint_SetMaxMotorForce,
      :b2PrismaticJoint_GetMaxMotorForce => :PrismaticJoint_GetMaxMotorForce,
      :b2PrismaticJoint_GetMotorForce => :PrismaticJoint_GetMotorForce,
      :b2CreateRevoluteJoint => :CreateRevoluteJoint,
      :b2RevoluteJoint_EnableSpring => :RevoluteJoint_EnableSpring,
      :b2RevoluteJoint_IsSpringEnabled => :RevoluteJoint_IsSpringEnabled,
      :b2RevoluteJoint_SetSpringHertz => :RevoluteJoint_SetSpringHertz,
      :b2RevoluteJoint_GetSpringHertz => :RevoluteJoint_GetSpringHertz,
      :b2RevoluteJoint_SetSpringDampingRatio => :RevoluteJoint_SetSpringDampingRatio,
      :b2RevoluteJoint_GetSpringDampingRatio => :RevoluteJoint_GetSpringDampingRatio,
      :b2RevoluteJoint_GetAngle => :RevoluteJoint_GetAngle,
      :b2RevoluteJoint_EnableLimit => :RevoluteJoint_EnableLimit,
      :b2RevoluteJoint_IsLimitEnabled => :RevoluteJoint_IsLimitEnabled,
      :b2RevoluteJoint_GetLowerLimit => :RevoluteJoint_GetLowerLimit,
      :b2RevoluteJoint_GetUpperLimit => :RevoluteJoint_GetUpperLimit,
      :b2RevoluteJoint_SetLimits => :RevoluteJoint_SetLimits,
      :b2RevoluteJoint_EnableMotor => :RevoluteJoint_EnableMotor,
      :b2RevoluteJoint_IsMotorEnabled => :RevoluteJoint_IsMotorEnabled,
      :b2RevoluteJoint_SetMotorSpeed => :RevoluteJoint_SetMotorSpeed,
      :b2RevoluteJoint_GetMotorSpeed => :RevoluteJoint_GetMotorSpeed,
      :b2RevoluteJoint_GetMotorTorque => :RevoluteJoint_GetMotorTorque,
      :b2RevoluteJoint_SetMaxMotorTorque => :RevoluteJoint_SetMaxMotorTorque,
      :b2RevoluteJoint_GetMaxMotorTorque => :RevoluteJoint_GetMaxMotorTorque,
      :b2CreateWeldJoint => :CreateWeldJoint,
      :b2WeldJoint_GetReferenceAngle => :WeldJoint_GetReferenceAngle,
      :b2WeldJoint_SetReferenceAngle => :WeldJoint_SetReferenceAngle,
      :b2WeldJoint_SetLinearHertz => :WeldJoint_SetLinearHertz,
      :b2WeldJoint_GetLinearHertz => :WeldJoint_GetLinearHertz,
      :b2WeldJoint_SetLinearDampingRatio => :WeldJoint_SetLinearDampingRatio,
      :b2WeldJoint_GetLinearDampingRatio => :WeldJoint_GetLinearDampingRatio,
      :b2WeldJoint_SetAngularHertz => :WeldJoint_SetAngularHertz,
      :b2WeldJoint_GetAngularHertz => :WeldJoint_GetAngularHertz,
      :b2WeldJoint_SetAngularDampingRatio => :WeldJoint_SetAngularDampingRatio,
      :b2WeldJoint_GetAngularDampingRatio => :WeldJoint_GetAngularDampingRatio,
      :b2CreateWheelJoint => :CreateWheelJoint,
      :b2WheelJoint_EnableSpring => :WheelJoint_EnableSpring,
      :b2WheelJoint_IsSpringEnabled => :WheelJoint_IsSpringEnabled,
      :b2WheelJoint_SetSpringHertz => :WheelJoint_SetSpringHertz,
      :b2WheelJoint_GetSpringHertz => :WheelJoint_GetSpringHertz,
      :b2WheelJoint_SetSpringDampingRatio => :WheelJoint_SetSpringDampingRatio,
      :b2WheelJoint_GetSpringDampingRatio => :WheelJoint_GetSpringDampingRatio,
      :b2WheelJoint_EnableLimit => :WheelJoint_EnableLimit,
      :b2WheelJoint_IsLimitEnabled => :WheelJoint_IsLimitEnabled,
      :b2WheelJoint_GetLowerLimit => :WheelJoint_GetLowerLimit,
      :b2WheelJoint_GetUpperLimit => :WheelJoint_GetUpperLimit,
      :b2WheelJoint_SetLimits => :WheelJoint_SetLimits,
      :b2WheelJoint_EnableMotor => :WheelJoint_EnableMotor,
      :b2WheelJoint_IsMotorEnabled => :WheelJoint_IsMotorEnabled,
      :b2WheelJoint_SetMotorSpeed => :WheelJoint_SetMotorSpeed,
      :b2WheelJoint_GetMotorSpeed => :WheelJoint_GetMotorSpeed,
      :b2WheelJoint_SetMaxMotorTorque => :WheelJoint_SetMaxMotorTorque,
      :b2WheelJoint_GetMaxMotorTorque => :WheelJoint_GetMaxMotorTorque,
      :b2WheelJoint_GetMotorTorque => :WheelJoint_GetMotorTorque,
    }
    args = {
      :b2CreateWorld => [:pointer],
      :b2DestroyWorld => [WorldId.by_value],
      :b2World_IsValid => [WorldId.by_value],
      :b2World_Step => [WorldId.by_value, :float, :int],
      :b2World_Draw => [WorldId.by_value, :pointer],
      :b2World_GetBodyEvents => [WorldId.by_value],
      :b2World_GetSensorEvents => [WorldId.by_value],
      :b2World_GetContactEvents => [WorldId.by_value],
      :b2World_OverlapAABB => [WorldId.by_value, AABB.by_value, QueryFilter.by_value, :pointer, :pointer],
      :b2World_OverlapCircle => [WorldId.by_value, :pointer, Transform.by_value, QueryFilter.by_value, :pointer, :pointer],
      :b2World_OverlapCapsule => [WorldId.by_value, :pointer, Transform.by_value, QueryFilter.by_value, :pointer, :pointer],
      :b2World_OverlapPolygon => [WorldId.by_value, :pointer, Transform.by_value, QueryFilter.by_value, :pointer, :pointer],
      :b2World_CastRay => [WorldId.by_value, Vec2.by_value, Vec2.by_value, QueryFilter.by_value, :pointer, :pointer],
      :b2World_CastRayClosest => [WorldId.by_value, Vec2.by_value, Vec2.by_value, QueryFilter.by_value],
      :b2World_CastCircle => [WorldId.by_value, :pointer, Transform.by_value, Vec2.by_value, QueryFilter.by_value, :pointer, :pointer],
      :b2World_CastCapsule => [WorldId.by_value, :pointer, Transform.by_value, Vec2.by_value, QueryFilter.by_value, :pointer, :pointer],
      :b2World_CastPolygon => [WorldId.by_value, :pointer, Transform.by_value, Vec2.by_value, QueryFilter.by_value, :pointer, :pointer],
      :b2World_EnableSleeping => [WorldId.by_value, :bool],
      :b2World_IsSleepingEnabled => [WorldId.by_value],
      :b2World_EnableContinuous => [WorldId.by_value, :bool],
      :b2World_IsContinuousEnabled => [WorldId.by_value],
      :b2World_SetRestitutionThreshold => [WorldId.by_value, :float],
      :b2World_GetRestitutionThreshold => [WorldId.by_value],
      :b2World_SetHitEventThreshold => [WorldId.by_value, :float],
      :b2World_GetHitEventThreshold => [WorldId.by_value],
      :b2World_SetCustomFilterCallback => [WorldId.by_value, :pointer, :pointer],
      :b2World_SetPreSolveCallback => [WorldId.by_value, :pointer, :pointer],
      :b2World_SetGravity => [WorldId.by_value, Vec2.by_value],
      :b2World_GetGravity => [WorldId.by_value],
      :b2World_Explode => [WorldId.by_value, :pointer],
      :b2World_SetContactTuning => [WorldId.by_value, :float, :float, :float],
      :b2World_SetJointTuning => [WorldId.by_value, :float, :float],
      :b2World_SetMaximumLinearVelocity => [WorldId.by_value, :float],
      :b2World_GetMaximumLinearVelocity => [WorldId.by_value],
      :b2World_EnableWarmStarting => [WorldId.by_value, :bool],
      :b2World_IsWarmStartingEnabled => [WorldId.by_value],
      :b2World_GetProfile => [WorldId.by_value],
      :b2World_GetCounters => [WorldId.by_value],
      :b2World_DumpMemoryStats => [WorldId.by_value],
      :b2CreateBody => [WorldId.by_value, :pointer],
      :b2DestroyBody => [BodyId.by_value],
      :b2Body_IsValid => [BodyId.by_value],
      :b2Body_GetType => [BodyId.by_value],
      :b2Body_SetType => [BodyId.by_value, :int],
      :b2Body_SetUserData => [BodyId.by_value, :pointer],
      :b2Body_GetUserData => [BodyId.by_value],
      :b2Body_GetPosition => [BodyId.by_value],
      :b2Body_GetRotation => [BodyId.by_value],
      :b2Body_GetTransform => [BodyId.by_value],
      :b2Body_SetTransform => [BodyId.by_value, Vec2.by_value, Rot.by_value],
      :b2Body_GetLocalPoint => [BodyId.by_value, Vec2.by_value],
      :b2Body_GetWorldPoint => [BodyId.by_value, Vec2.by_value],
      :b2Body_GetLocalVector => [BodyId.by_value, Vec2.by_value],
      :b2Body_GetWorldVector => [BodyId.by_value, Vec2.by_value],
      :b2Body_GetLinearVelocity => [BodyId.by_value],
      :b2Body_GetAngularVelocity => [BodyId.by_value],
      :b2Body_SetLinearVelocity => [BodyId.by_value, Vec2.by_value],
      :b2Body_SetAngularVelocity => [BodyId.by_value, :float],
      :b2Body_ApplyForce => [BodyId.by_value, Vec2.by_value, Vec2.by_value, :bool],
      :b2Body_ApplyForceToCenter => [BodyId.by_value, Vec2.by_value, :bool],
      :b2Body_ApplyTorque => [BodyId.by_value, :float, :bool],
      :b2Body_ApplyLinearImpulse => [BodyId.by_value, Vec2.by_value, Vec2.by_value, :bool],
      :b2Body_ApplyLinearImpulseToCenter => [BodyId.by_value, Vec2.by_value, :bool],
      :b2Body_ApplyAngularImpulse => [BodyId.by_value, :float, :bool],
      :b2Body_GetMass => [BodyId.by_value],
      :b2Body_GetRotationalInertia => [BodyId.by_value],
      :b2Body_GetLocalCenterOfMass => [BodyId.by_value],
      :b2Body_GetWorldCenterOfMass => [BodyId.by_value],
      :b2Body_SetMassData => [BodyId.by_value, MassData.by_value],
      :b2Body_GetMassData => [BodyId.by_value],
      :b2Body_ApplyMassFromShapes => [BodyId.by_value],
      :b2Body_SetAutomaticMass => [BodyId.by_value, :bool],
      :b2Body_GetAutomaticMass => [BodyId.by_value],
      :b2Body_SetLinearDamping => [BodyId.by_value, :float],
      :b2Body_GetLinearDamping => [BodyId.by_value],
      :b2Body_SetAngularDamping => [BodyId.by_value, :float],
      :b2Body_GetAngularDamping => [BodyId.by_value],
      :b2Body_SetGravityScale => [BodyId.by_value, :float],
      :b2Body_GetGravityScale => [BodyId.by_value],
      :b2Body_IsAwake => [BodyId.by_value],
      :b2Body_SetAwake => [BodyId.by_value, :bool],
      :b2Body_EnableSleep => [BodyId.by_value, :bool],
      :b2Body_IsSleepEnabled => [BodyId.by_value],
      :b2Body_SetSleepThreshold => [BodyId.by_value, :float],
      :b2Body_GetSleepThreshold => [BodyId.by_value],
      :b2Body_IsEnabled => [BodyId.by_value],
      :b2Body_Disable => [BodyId.by_value],
      :b2Body_Enable => [BodyId.by_value],
      :b2Body_SetFixedRotation => [BodyId.by_value, :bool],
      :b2Body_IsFixedRotation => [BodyId.by_value],
      :b2Body_SetBullet => [BodyId.by_value, :bool],
      :b2Body_IsBullet => [BodyId.by_value],
      :b2Body_EnableHitEvents => [BodyId.by_value, :bool],
      :b2Body_GetWorld => [BodyId.by_value],
      :b2Body_GetShapeCount => [BodyId.by_value],
      :b2Body_GetShapes => [BodyId.by_value, :pointer, :int],
      :b2Body_GetJointCount => [BodyId.by_value],
      :b2Body_GetJoints => [BodyId.by_value, :pointer, :int],
      :b2Body_GetContactCapacity => [BodyId.by_value],
      :b2Body_GetContactData => [BodyId.by_value, :pointer, :int],
      :b2Body_ComputeAABB => [BodyId.by_value],
      :b2CreateCircleShape => [BodyId.by_value, :pointer, :pointer],
      :b2CreateSegmentShape => [BodyId.by_value, :pointer, :pointer],
      :b2CreateCapsuleShape => [BodyId.by_value, :pointer, :pointer],
      :b2CreatePolygonShape => [BodyId.by_value, :pointer, :pointer],
      :b2DestroyShape => [ShapeId.by_value],
      :b2Shape_IsValid => [ShapeId.by_value],
      :b2Shape_GetType => [ShapeId.by_value],
      :b2Shape_GetBody => [ShapeId.by_value],
      :b2Shape_GetWorld => [ShapeId.by_value],
      :b2Shape_IsSensor => [ShapeId.by_value],
      :b2Shape_SetUserData => [ShapeId.by_value, :pointer],
      :b2Shape_GetUserData => [ShapeId.by_value],
      :b2Shape_SetDensity => [ShapeId.by_value, :float],
      :b2Shape_GetDensity => [ShapeId.by_value],
      :b2Shape_SetFriction => [ShapeId.by_value, :float],
      :b2Shape_GetFriction => [ShapeId.by_value],
      :b2Shape_SetRestitution => [ShapeId.by_value, :float],
      :b2Shape_GetRestitution => [ShapeId.by_value],
      :b2Shape_GetFilter => [ShapeId.by_value],
      :b2Shape_SetFilter => [ShapeId.by_value, Filter.by_value],
      :b2Shape_EnableSensorEvents => [ShapeId.by_value, :bool],
      :b2Shape_AreSensorEventsEnabled => [ShapeId.by_value],
      :b2Shape_EnableContactEvents => [ShapeId.by_value, :bool],
      :b2Shape_AreContactEventsEnabled => [ShapeId.by_value],
      :b2Shape_EnablePreSolveEvents => [ShapeId.by_value, :bool],
      :b2Shape_ArePreSolveEventsEnabled => [ShapeId.by_value],
      :b2Shape_EnableHitEvents => [ShapeId.by_value, :bool],
      :b2Shape_AreHitEventsEnabled => [ShapeId.by_value],
      :b2Shape_TestPoint => [ShapeId.by_value, Vec2.by_value],
      :b2Shape_RayCast => [ShapeId.by_value, :pointer],
      :b2Shape_GetCircle => [ShapeId.by_value],
      :b2Shape_GetSegment => [ShapeId.by_value],
      :b2Shape_GetChainSegment => [ShapeId.by_value],
      :b2Shape_GetCapsule => [ShapeId.by_value],
      :b2Shape_GetPolygon => [ShapeId.by_value],
      :b2Shape_SetCircle => [ShapeId.by_value, :pointer],
      :b2Shape_SetCapsule => [ShapeId.by_value, :pointer],
      :b2Shape_SetSegment => [ShapeId.by_value, :pointer],
      :b2Shape_SetPolygon => [ShapeId.by_value, :pointer],
      :b2Shape_GetParentChain => [ShapeId.by_value],
      :b2Shape_GetContactCapacity => [ShapeId.by_value],
      :b2Shape_GetContactData => [ShapeId.by_value, :pointer, :int],
      :b2Shape_GetAABB => [ShapeId.by_value],
      :b2Shape_GetClosestPoint => [ShapeId.by_value, Vec2.by_value],
      :b2CreateChain => [BodyId.by_value, :pointer],
      :b2DestroyChain => [ChainId.by_value],
      :b2Chain_GetWorld => [ChainId.by_value],
      :b2Chain_GetSegmentCount => [ChainId.by_value],
      :b2Chain_GetSegments => [ChainId.by_value, :pointer, :int],
      :b2Chain_SetFriction => [ChainId.by_value, :float],
      :b2Chain_SetRestitution => [ChainId.by_value, :float],
      :b2Chain_IsValid => [ChainId.by_value],
      :b2DestroyJoint => [JointId.by_value],
      :b2Joint_IsValid => [JointId.by_value],
      :b2Joint_GetType => [JointId.by_value],
      :b2Joint_GetBodyA => [JointId.by_value],
      :b2Joint_GetBodyB => [JointId.by_value],
      :b2Joint_GetWorld => [JointId.by_value],
      :b2Joint_GetLocalAnchorA => [JointId.by_value],
      :b2Joint_GetLocalAnchorB => [JointId.by_value],
      :b2Joint_SetCollideConnected => [JointId.by_value, :bool],
      :b2Joint_GetCollideConnected => [JointId.by_value],
      :b2Joint_SetUserData => [JointId.by_value, :pointer],
      :b2Joint_GetUserData => [JointId.by_value],
      :b2Joint_WakeBodies => [JointId.by_value],
      :b2Joint_GetConstraintForce => [JointId.by_value],
      :b2Joint_GetConstraintTorque => [JointId.by_value],
      :b2CreateDistanceJoint => [WorldId.by_value, :pointer],
      :b2DistanceJoint_SetLength => [JointId.by_value, :float],
      :b2DistanceJoint_GetLength => [JointId.by_value],
      :b2DistanceJoint_EnableSpring => [JointId.by_value, :bool],
      :b2DistanceJoint_IsSpringEnabled => [JointId.by_value],
      :b2DistanceJoint_SetSpringHertz => [JointId.by_value, :float],
      :b2DistanceJoint_SetSpringDampingRatio => [JointId.by_value, :float],
      :b2DistanceJoint_GetSpringHertz => [JointId.by_value],
      :b2DistanceJoint_GetSpringDampingRatio => [JointId.by_value],
      :b2DistanceJoint_EnableLimit => [JointId.by_value, :bool],
      :b2DistanceJoint_IsLimitEnabled => [JointId.by_value],
      :b2DistanceJoint_SetLengthRange => [JointId.by_value, :float, :float],
      :b2DistanceJoint_GetMinLength => [JointId.by_value],
      :b2DistanceJoint_GetMaxLength => [JointId.by_value],
      :b2DistanceJoint_GetCurrentLength => [JointId.by_value],
      :b2DistanceJoint_EnableMotor => [JointId.by_value, :bool],
      :b2DistanceJoint_IsMotorEnabled => [JointId.by_value],
      :b2DistanceJoint_SetMotorSpeed => [JointId.by_value, :float],
      :b2DistanceJoint_GetMotorSpeed => [JointId.by_value],
      :b2DistanceJoint_SetMaxMotorForce => [JointId.by_value, :float],
      :b2DistanceJoint_GetMaxMotorForce => [JointId.by_value],
      :b2DistanceJoint_GetMotorForce => [JointId.by_value],
      :b2CreateMotorJoint => [WorldId.by_value, :pointer],
      :b2MotorJoint_SetLinearOffset => [JointId.by_value, Vec2.by_value],
      :b2MotorJoint_GetLinearOffset => [JointId.by_value],
      :b2MotorJoint_SetAngularOffset => [JointId.by_value, :float],
      :b2MotorJoint_GetAngularOffset => [JointId.by_value],
      :b2MotorJoint_SetMaxForce => [JointId.by_value, :float],
      :b2MotorJoint_GetMaxForce => [JointId.by_value],
      :b2MotorJoint_SetMaxTorque => [JointId.by_value, :float],
      :b2MotorJoint_GetMaxTorque => [JointId.by_value],
      :b2MotorJoint_SetCorrectionFactor => [JointId.by_value, :float],
      :b2MotorJoint_GetCorrectionFactor => [JointId.by_value],
      :b2CreateMouseJoint => [WorldId.by_value, :pointer],
      :b2MouseJoint_SetTarget => [JointId.by_value, Vec2.by_value],
      :b2MouseJoint_GetTarget => [JointId.by_value],
      :b2MouseJoint_SetSpringHertz => [JointId.by_value, :float],
      :b2MouseJoint_GetSpringHertz => [JointId.by_value],
      :b2MouseJoint_SetSpringDampingRatio => [JointId.by_value, :float],
      :b2MouseJoint_GetSpringDampingRatio => [JointId.by_value],
      :b2MouseJoint_SetMaxForce => [JointId.by_value, :float],
      :b2MouseJoint_GetMaxForce => [JointId.by_value],
      :b2CreatePrismaticJoint => [WorldId.by_value, :pointer],
      :b2PrismaticJoint_EnableSpring => [JointId.by_value, :bool],
      :b2PrismaticJoint_IsSpringEnabled => [JointId.by_value],
      :b2PrismaticJoint_SetSpringHertz => [JointId.by_value, :float],
      :b2PrismaticJoint_GetSpringHertz => [JointId.by_value],
      :b2PrismaticJoint_SetSpringDampingRatio => [JointId.by_value, :float],
      :b2PrismaticJoint_GetSpringDampingRatio => [JointId.by_value],
      :b2PrismaticJoint_EnableLimit => [JointId.by_value, :bool],
      :b2PrismaticJoint_IsLimitEnabled => [JointId.by_value],
      :b2PrismaticJoint_GetLowerLimit => [JointId.by_value],
      :b2PrismaticJoint_GetUpperLimit => [JointId.by_value],
      :b2PrismaticJoint_SetLimits => [JointId.by_value, :float, :float],
      :b2PrismaticJoint_EnableMotor => [JointId.by_value, :bool],
      :b2PrismaticJoint_IsMotorEnabled => [JointId.by_value],
      :b2PrismaticJoint_SetMotorSpeed => [JointId.by_value, :float],
      :b2PrismaticJoint_GetMotorSpeed => [JointId.by_value],
      :b2PrismaticJoint_SetMaxMotorForce => [JointId.by_value, :float],
      :b2PrismaticJoint_GetMaxMotorForce => [JointId.by_value],
      :b2PrismaticJoint_GetMotorForce => [JointId.by_value],
      :b2CreateRevoluteJoint => [WorldId.by_value, :pointer],
      :b2RevoluteJoint_EnableSpring => [JointId.by_value, :bool],
      :b2RevoluteJoint_IsSpringEnabled => [JointId.by_value],
      :b2RevoluteJoint_SetSpringHertz => [JointId.by_value, :float],
      :b2RevoluteJoint_GetSpringHertz => [JointId.by_value],
      :b2RevoluteJoint_SetSpringDampingRatio => [JointId.by_value, :float],
      :b2RevoluteJoint_GetSpringDampingRatio => [JointId.by_value],
      :b2RevoluteJoint_GetAngle => [JointId.by_value],
      :b2RevoluteJoint_EnableLimit => [JointId.by_value, :bool],
      :b2RevoluteJoint_IsLimitEnabled => [JointId.by_value],
      :b2RevoluteJoint_GetLowerLimit => [JointId.by_value],
      :b2RevoluteJoint_GetUpperLimit => [JointId.by_value],
      :b2RevoluteJoint_SetLimits => [JointId.by_value, :float, :float],
      :b2RevoluteJoint_EnableMotor => [JointId.by_value, :bool],
      :b2RevoluteJoint_IsMotorEnabled => [JointId.by_value],
      :b2RevoluteJoint_SetMotorSpeed => [JointId.by_value, :float],
      :b2RevoluteJoint_GetMotorSpeed => [JointId.by_value],
      :b2RevoluteJoint_GetMotorTorque => [JointId.by_value],
      :b2RevoluteJoint_SetMaxMotorTorque => [JointId.by_value, :float],
      :b2RevoluteJoint_GetMaxMotorTorque => [JointId.by_value],
      :b2CreateWeldJoint => [WorldId.by_value, :pointer],
      :b2WeldJoint_GetReferenceAngle => [JointId.by_value],
      :b2WeldJoint_SetReferenceAngle => [JointId.by_value, :float],
      :b2WeldJoint_SetLinearHertz => [JointId.by_value, :float],
      :b2WeldJoint_GetLinearHertz => [JointId.by_value],
      :b2WeldJoint_SetLinearDampingRatio => [JointId.by_value, :float],
      :b2WeldJoint_GetLinearDampingRatio => [JointId.by_value],
      :b2WeldJoint_SetAngularHertz => [JointId.by_value, :float],
      :b2WeldJoint_GetAngularHertz => [JointId.by_value],
      :b2WeldJoint_SetAngularDampingRatio => [JointId.by_value, :float],
      :b2WeldJoint_GetAngularDampingRatio => [JointId.by_value],
      :b2CreateWheelJoint => [WorldId.by_value, :pointer],
      :b2WheelJoint_EnableSpring => [JointId.by_value, :bool],
      :b2WheelJoint_IsSpringEnabled => [JointId.by_value],
      :b2WheelJoint_SetSpringHertz => [JointId.by_value, :float],
      :b2WheelJoint_GetSpringHertz => [JointId.by_value],
      :b2WheelJoint_SetSpringDampingRatio => [JointId.by_value, :float],
      :b2WheelJoint_GetSpringDampingRatio => [JointId.by_value],
      :b2WheelJoint_EnableLimit => [JointId.by_value, :bool],
      :b2WheelJoint_IsLimitEnabled => [JointId.by_value],
      :b2WheelJoint_GetLowerLimit => [JointId.by_value],
      :b2WheelJoint_GetUpperLimit => [JointId.by_value],
      :b2WheelJoint_SetLimits => [JointId.by_value, :float, :float],
      :b2WheelJoint_EnableMotor => [JointId.by_value, :bool],
      :b2WheelJoint_IsMotorEnabled => [JointId.by_value],
      :b2WheelJoint_SetMotorSpeed => [JointId.by_value, :float],
      :b2WheelJoint_GetMotorSpeed => [JointId.by_value],
      :b2WheelJoint_SetMaxMotorTorque => [JointId.by_value, :float],
      :b2WheelJoint_GetMaxMotorTorque => [JointId.by_value],
      :b2WheelJoint_GetMotorTorque => [JointId.by_value],
    }
    retvals = {
      :b2CreateWorld => WorldId.by_value,
      :b2DestroyWorld => :void,
      :b2World_IsValid => :bool,
      :b2World_Step => :void,
      :b2World_Draw => :void,
      :b2World_GetBodyEvents => BodyEvents.by_value,
      :b2World_GetSensorEvents => SensorEvents.by_value,
      :b2World_GetContactEvents => ContactEvents.by_value,
      :b2World_OverlapAABB => :void,
      :b2World_OverlapCircle => :void,
      :b2World_OverlapCapsule => :void,
      :b2World_OverlapPolygon => :void,
      :b2World_CastRay => :void,
      :b2World_CastRayClosest => RayResult.by_value,
      :b2World_CastCircle => :void,
      :b2World_CastCapsule => :void,
      :b2World_CastPolygon => :void,
      :b2World_EnableSleeping => :void,
      :b2World_IsSleepingEnabled => :bool,
      :b2World_EnableContinuous => :void,
      :b2World_IsContinuousEnabled => :bool,
      :b2World_SetRestitutionThreshold => :void,
      :b2World_GetRestitutionThreshold => :float,
      :b2World_SetHitEventThreshold => :void,
      :b2World_GetHitEventThreshold => :float,
      :b2World_SetCustomFilterCallback => :void,
      :b2World_SetPreSolveCallback => :void,
      :b2World_SetGravity => :void,
      :b2World_GetGravity => Vec2.by_value,
      :b2World_Explode => :void,
      :b2World_SetContactTuning => :void,
      :b2World_SetJointTuning => :void,
      :b2World_SetMaximumLinearVelocity => :void,
      :b2World_GetMaximumLinearVelocity => :float,
      :b2World_EnableWarmStarting => :void,
      :b2World_IsWarmStartingEnabled => :bool,
      :b2World_GetProfile => Profile.by_value,
      :b2World_GetCounters => Counters.by_value,
      :b2World_DumpMemoryStats => :void,
      :b2CreateBody => BodyId.by_value,
      :b2DestroyBody => :void,
      :b2Body_IsValid => :bool,
      :b2Body_GetType => :int,
      :b2Body_SetType => :void,
      :b2Body_SetUserData => :void,
      :b2Body_GetUserData => :pointer,
      :b2Body_GetPosition => Vec2.by_value,
      :b2Body_GetRotation => Rot.by_value,
      :b2Body_GetTransform => Transform.by_value,
      :b2Body_SetTransform => :void,
      :b2Body_GetLocalPoint => Vec2.by_value,
      :b2Body_GetWorldPoint => Vec2.by_value,
      :b2Body_GetLocalVector => Vec2.by_value,
      :b2Body_GetWorldVector => Vec2.by_value,
      :b2Body_GetLinearVelocity => Vec2.by_value,
      :b2Body_GetAngularVelocity => :float,
      :b2Body_SetLinearVelocity => :void,
      :b2Body_SetAngularVelocity => :void,
      :b2Body_ApplyForce => :void,
      :b2Body_ApplyForceToCenter => :void,
      :b2Body_ApplyTorque => :void,
      :b2Body_ApplyLinearImpulse => :void,
      :b2Body_ApplyLinearImpulseToCenter => :void,
      :b2Body_ApplyAngularImpulse => :void,
      :b2Body_GetMass => :float,
      :b2Body_GetRotationalInertia => :float,
      :b2Body_GetLocalCenterOfMass => Vec2.by_value,
      :b2Body_GetWorldCenterOfMass => Vec2.by_value,
      :b2Body_SetMassData => :void,
      :b2Body_GetMassData => MassData.by_value,
      :b2Body_ApplyMassFromShapes => :void,
      :b2Body_SetAutomaticMass => :void,
      :b2Body_GetAutomaticMass => :bool,
      :b2Body_SetLinearDamping => :void,
      :b2Body_GetLinearDamping => :float,
      :b2Body_SetAngularDamping => :void,
      :b2Body_GetAngularDamping => :float,
      :b2Body_SetGravityScale => :void,
      :b2Body_GetGravityScale => :float,
      :b2Body_IsAwake => :bool,
      :b2Body_SetAwake => :void,
      :b2Body_EnableSleep => :void,
      :b2Body_IsSleepEnabled => :bool,
      :b2Body_SetSleepThreshold => :void,
      :b2Body_GetSleepThreshold => :float,
      :b2Body_IsEnabled => :bool,
      :b2Body_Disable => :void,
      :b2Body_Enable => :void,
      :b2Body_SetFixedRotation => :void,
      :b2Body_IsFixedRotation => :bool,
      :b2Body_SetBullet => :void,
      :b2Body_IsBullet => :bool,
      :b2Body_EnableHitEvents => :void,
      :b2Body_GetWorld => WorldId.by_value,
      :b2Body_GetShapeCount => :int,
      :b2Body_GetShapes => :int,
      :b2Body_GetJointCount => :int,
      :b2Body_GetJoints => :int,
      :b2Body_GetContactCapacity => :int,
      :b2Body_GetContactData => :int,
      :b2Body_ComputeAABB => AABB.by_value,
      :b2CreateCircleShape => ShapeId.by_value,
      :b2CreateSegmentShape => ShapeId.by_value,
      :b2CreateCapsuleShape => ShapeId.by_value,
      :b2CreatePolygonShape => ShapeId.by_value,
      :b2DestroyShape => :void,
      :b2Shape_IsValid => :bool,
      :b2Shape_GetType => :int,
      :b2Shape_GetBody => BodyId.by_value,
      :b2Shape_GetWorld => WorldId.by_value,
      :b2Shape_IsSensor => :bool,
      :b2Shape_SetUserData => :void,
      :b2Shape_GetUserData => :pointer,
      :b2Shape_SetDensity => :void,
      :b2Shape_GetDensity => :float,
      :b2Shape_SetFriction => :void,
      :b2Shape_GetFriction => :float,
      :b2Shape_SetRestitution => :void,
      :b2Shape_GetRestitution => :float,
      :b2Shape_GetFilter => Filter.by_value,
      :b2Shape_SetFilter => :void,
      :b2Shape_EnableSensorEvents => :void,
      :b2Shape_AreSensorEventsEnabled => :bool,
      :b2Shape_EnableContactEvents => :void,
      :b2Shape_AreContactEventsEnabled => :bool,
      :b2Shape_EnablePreSolveEvents => :void,
      :b2Shape_ArePreSolveEventsEnabled => :bool,
      :b2Shape_EnableHitEvents => :void,
      :b2Shape_AreHitEventsEnabled => :bool,
      :b2Shape_TestPoint => :bool,
      :b2Shape_RayCast => CastOutput.by_value,
      :b2Shape_GetCircle => Circle.by_value,
      :b2Shape_GetSegment => Segment.by_value,
      :b2Shape_GetChainSegment => ChainSegment.by_value,
      :b2Shape_GetCapsule => Capsule.by_value,
      :b2Shape_GetPolygon => Polygon.by_value,
      :b2Shape_SetCircle => :void,
      :b2Shape_SetCapsule => :void,
      :b2Shape_SetSegment => :void,
      :b2Shape_SetPolygon => :void,
      :b2Shape_GetParentChain => ChainId.by_value,
      :b2Shape_GetContactCapacity => :int,
      :b2Shape_GetContactData => :int,
      :b2Shape_GetAABB => AABB.by_value,
      :b2Shape_GetClosestPoint => Vec2.by_value,
      :b2CreateChain => ChainId.by_value,
      :b2DestroyChain => :void,
      :b2Chain_GetWorld => WorldId.by_value,
      :b2Chain_GetSegmentCount => :int,
      :b2Chain_GetSegments => :int,
      :b2Chain_SetFriction => :void,
      :b2Chain_SetRestitution => :void,
      :b2Chain_IsValid => :bool,
      :b2DestroyJoint => :void,
      :b2Joint_IsValid => :bool,
      :b2Joint_GetType => :int,
      :b2Joint_GetBodyA => BodyId.by_value,
      :b2Joint_GetBodyB => BodyId.by_value,
      :b2Joint_GetWorld => WorldId.by_value,
      :b2Joint_GetLocalAnchorA => Vec2.by_value,
      :b2Joint_GetLocalAnchorB => Vec2.by_value,
      :b2Joint_SetCollideConnected => :void,
      :b2Joint_GetCollideConnected => :bool,
      :b2Joint_SetUserData => :void,
      :b2Joint_GetUserData => :pointer,
      :b2Joint_WakeBodies => :void,
      :b2Joint_GetConstraintForce => Vec2.by_value,
      :b2Joint_GetConstraintTorque => :float,
      :b2CreateDistanceJoint => JointId.by_value,
      :b2DistanceJoint_SetLength => :void,
      :b2DistanceJoint_GetLength => :float,
      :b2DistanceJoint_EnableSpring => :void,
      :b2DistanceJoint_IsSpringEnabled => :bool,
      :b2DistanceJoint_SetSpringHertz => :void,
      :b2DistanceJoint_SetSpringDampingRatio => :void,
      :b2DistanceJoint_GetSpringHertz => :float,
      :b2DistanceJoint_GetSpringDampingRatio => :float,
      :b2DistanceJoint_EnableLimit => :void,
      :b2DistanceJoint_IsLimitEnabled => :bool,
      :b2DistanceJoint_SetLengthRange => :void,
      :b2DistanceJoint_GetMinLength => :float,
      :b2DistanceJoint_GetMaxLength => :float,
      :b2DistanceJoint_GetCurrentLength => :float,
      :b2DistanceJoint_EnableMotor => :void,
      :b2DistanceJoint_IsMotorEnabled => :bool,
      :b2DistanceJoint_SetMotorSpeed => :void,
      :b2DistanceJoint_GetMotorSpeed => :float,
      :b2DistanceJoint_SetMaxMotorForce => :void,
      :b2DistanceJoint_GetMaxMotorForce => :float,
      :b2DistanceJoint_GetMotorForce => :float,
      :b2CreateMotorJoint => JointId.by_value,
      :b2MotorJoint_SetLinearOffset => :void,
      :b2MotorJoint_GetLinearOffset => Vec2.by_value,
      :b2MotorJoint_SetAngularOffset => :void,
      :b2MotorJoint_GetAngularOffset => :float,
      :b2MotorJoint_SetMaxForce => :void,
      :b2MotorJoint_GetMaxForce => :float,
      :b2MotorJoint_SetMaxTorque => :void,
      :b2MotorJoint_GetMaxTorque => :float,
      :b2MotorJoint_SetCorrectionFactor => :void,
      :b2MotorJoint_GetCorrectionFactor => :float,
      :b2CreateMouseJoint => JointId.by_value,
      :b2MouseJoint_SetTarget => :void,
      :b2MouseJoint_GetTarget => Vec2.by_value,
      :b2MouseJoint_SetSpringHertz => :void,
      :b2MouseJoint_GetSpringHertz => :float,
      :b2MouseJoint_SetSpringDampingRatio => :void,
      :b2MouseJoint_GetSpringDampingRatio => :float,
      :b2MouseJoint_SetMaxForce => :void,
      :b2MouseJoint_GetMaxForce => :float,
      :b2CreatePrismaticJoint => JointId.by_value,
      :b2PrismaticJoint_EnableSpring => :void,
      :b2PrismaticJoint_IsSpringEnabled => :bool,
      :b2PrismaticJoint_SetSpringHertz => :void,
      :b2PrismaticJoint_GetSpringHertz => :float,
      :b2PrismaticJoint_SetSpringDampingRatio => :void,
      :b2PrismaticJoint_GetSpringDampingRatio => :float,
      :b2PrismaticJoint_EnableLimit => :void,
      :b2PrismaticJoint_IsLimitEnabled => :bool,
      :b2PrismaticJoint_GetLowerLimit => :float,
      :b2PrismaticJoint_GetUpperLimit => :float,
      :b2PrismaticJoint_SetLimits => :void,
      :b2PrismaticJoint_EnableMotor => :void,
      :b2PrismaticJoint_IsMotorEnabled => :bool,
      :b2PrismaticJoint_SetMotorSpeed => :void,
      :b2PrismaticJoint_GetMotorSpeed => :float,
      :b2PrismaticJoint_SetMaxMotorForce => :void,
      :b2PrismaticJoint_GetMaxMotorForce => :float,
      :b2PrismaticJoint_GetMotorForce => :float,
      :b2CreateRevoluteJoint => JointId.by_value,
      :b2RevoluteJoint_EnableSpring => :void,
      :b2RevoluteJoint_IsSpringEnabled => :bool,
      :b2RevoluteJoint_SetSpringHertz => :void,
      :b2RevoluteJoint_GetSpringHertz => :float,
      :b2RevoluteJoint_SetSpringDampingRatio => :void,
      :b2RevoluteJoint_GetSpringDampingRatio => :float,
      :b2RevoluteJoint_GetAngle => :float,
      :b2RevoluteJoint_EnableLimit => :void,
      :b2RevoluteJoint_IsLimitEnabled => :bool,
      :b2RevoluteJoint_GetLowerLimit => :float,
      :b2RevoluteJoint_GetUpperLimit => :float,
      :b2RevoluteJoint_SetLimits => :void,
      :b2RevoluteJoint_EnableMotor => :void,
      :b2RevoluteJoint_IsMotorEnabled => :bool,
      :b2RevoluteJoint_SetMotorSpeed => :void,
      :b2RevoluteJoint_GetMotorSpeed => :float,
      :b2RevoluteJoint_GetMotorTorque => :float,
      :b2RevoluteJoint_SetMaxMotorTorque => :void,
      :b2RevoluteJoint_GetMaxMotorTorque => :float,
      :b2CreateWeldJoint => JointId.by_value,
      :b2WeldJoint_GetReferenceAngle => :float,
      :b2WeldJoint_SetReferenceAngle => :void,
      :b2WeldJoint_SetLinearHertz => :void,
      :b2WeldJoint_GetLinearHertz => :float,
      :b2WeldJoint_SetLinearDampingRatio => :void,
      :b2WeldJoint_GetLinearDampingRatio => :float,
      :b2WeldJoint_SetAngularHertz => :void,
      :b2WeldJoint_GetAngularHertz => :float,
      :b2WeldJoint_SetAngularDampingRatio => :void,
      :b2WeldJoint_GetAngularDampingRatio => :float,
      :b2CreateWheelJoint => JointId.by_value,
      :b2WheelJoint_EnableSpring => :void,
      :b2WheelJoint_IsSpringEnabled => :bool,
      :b2WheelJoint_SetSpringHertz => :void,
      :b2WheelJoint_GetSpringHertz => :float,
      :b2WheelJoint_SetSpringDampingRatio => :void,
      :b2WheelJoint_GetSpringDampingRatio => :float,
      :b2WheelJoint_EnableLimit => :void,
      :b2WheelJoint_IsLimitEnabled => :bool,
      :b2WheelJoint_GetLowerLimit => :float,
      :b2WheelJoint_GetUpperLimit => :float,
      :b2WheelJoint_SetLimits => :void,
      :b2WheelJoint_EnableMotor => :void,
      :b2WheelJoint_IsMotorEnabled => :bool,
      :b2WheelJoint_SetMotorSpeed => :void,
      :b2WheelJoint_GetMotorSpeed => :float,
      :b2WheelJoint_SetMaxMotorTorque => :void,
      :b2WheelJoint_GetMaxMotorTorque => :float,
      :b2WheelJoint_GetMotorTorque => :float,
    }
    symbols.each do |sym|
      begin
        attach_function apis[sym], sym, args[sym], retvals[sym]
      rescue FFI::NotFoundError => error
        $stderr.puts("[Warning] Failed to import #{sym} (#{error}).") if output_error
      end
    end
  end

end

